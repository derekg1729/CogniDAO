[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["cogni_adapters", "legacy_logseq", "utils"]

[project]
name = "cogni"
version = "0.1.0"
description = "Adapter layers for integrating Cogni's memory system with various AI frameworks"
authors = [
    { name = "CogniDAO" }
]
dependencies = [
    # Truly shared dependencies across all services
    "doltpy",  # Database access shared by multiple services
    "rpds-py", # Immutable data structures
    "pydantic>=2.8.0",  # Data validation used everywhere
    
    # Core infrastructure shared by services  
    "mysql-connector-python>=8.0.21",  # Database connectivity
    "sentence-transformers>=2.2.2",  # Embeddings used by multiple services
    "prefect>=3.0.0,<4.0.0",  # Workflow orchestration for deployment scripts
]
requires-python = ">=3.11"

[project.optional-dependencies]
playwright = ["playwright>=1.49.0", "pytest-playwright"]
dev = [
    # Essential development and testing dependencies only
    "pytest>=7.0.0",
    "pytest-mock>=3.10.0", 
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.3.3",
    "pre-commit>=4.2.0",
    "respx>=0.22.0",  # HTTP mocking for HTTPX (used in test fixtures)
    
    # Essential dependencies for basic development workflow
    # (Full dependencies available through service-specific installs)
    "fastapi",  # Basic web framework for dev
    "requests",  # HTTP client for dev/testing
]

[tool.ruff]
line-length = 100
exclude = ["build", "dist", ".venv", "__pycache__"]

[tool.ruff.lint]
select = ["E", "F"]        # Enable basic style + logical error checks
ignore = ["E501"]          # Ignore line length for now 

[tool.uv.workspace]
members = [
    "libs/*",
    "services/mcp_server",
    "services/web_api", 
    "services/prefect_worker",
]

[tool.uv.sources]
cogni = { workspace = true }
cogni-infra-core = { workspace = true }
