[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "prefect-mcp-bridge"
version = "0.1.0"
description = "Expose MCP HTTP endpoints as reusable Prefect @task wrappers"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Cogni Team", email = "steward@cognidao.org"},
]
keywords = ["prefect", "mcp", "dolt", "workflow", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
requires-python = ">=3.8"
dependencies = [
    "prefect>=2.10.0",
    "requests>=2.28.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "respx>=0.20.0",
    "httpx>=0.24.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]

test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "respx>=0.20.0",
    "httpx>=0.24.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/cogni/prefect-mcp-bridge"
Repository = "https://github.com/cogni/prefect-mcp-bridge"
Documentation = "https://github.com/cogni/prefect-mcp-bridge#readme"
"Bug Tracker" = "https://github.com/cogni/prefect-mcp-bridge/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/prefect_mcp_bridge"]

[tool.hatch.build.targets.sdist]
include = [
    "/src/prefect_mcp_bridge",
    "/tests",
    "/examples",
    "README.md",
    "LICENSE",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=src/prefect_mcp_bridge",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
]

[tool.coverage.run]
source = ["src/prefect_mcp_bridge"]
omit = [
    "*/tests/*",
    "*/examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 