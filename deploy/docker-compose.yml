services:
  # Dolt SQL Server Database Service
  dolt-db:
    image: ${DOLT_IMAGE:-deploy-dolt-db}
    build:
      context: ..
      dockerfile: services/dolt_memory/cogni-cogni-dao-memory.dockerfile
    env_file: ./.env
    environment:
      - HOST=0.0.0.0
      - PORT=3306
      - DOLT_ROOT_PATH=/.dolt
      - DATABASE_REMOTE=https://doltremoteapi.dolthub.com/cogni/cogni-dao-memory
      - DATABASE_NAME=cogni-dao-memory
      - DOLTHUB_USER=cogni
      - DOLTHUB_EMAIL=steward@cognidao.org
      - DATA_DIR=/dolthub-dbs/cogni/cogni-dao-memory
      - DOLT_ROOT_HOST=%
      - DOLT_ROOT_PASSWORD=${DOLT_ROOT_PASSWORD}
    volumes:
      - dolt_data:/dolthub-dbs
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "dolt", "sql", "-q", "SELECT 1;"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  # Web API Service  
  api:
    image: ${API_IMAGE:-cogni-api-local}
    build:
      context: ..
      dockerfile: services/web_api/Dockerfile.api
    env_file: ./.env
    environment:
      - DOLT_HOST=dolt-db
      - DOLT_PORT=3306
      - DOLT_USER=root
      - DOLT_PASSWORD=${DOLT_ROOT_PASSWORD}
      - DOLT_DATABASE=cogni-dao-memory
    expose: ["8000"]
    ports: ["8000:8000"]
    depends_on:
      dolt-db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      retries: 3

  caddy:
    image: caddy:2-alpine
    ports: ["80:80", "443:443"]
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on: [api]

volumes:
  caddy_data:
  caddy_config:
  dolt_data: 