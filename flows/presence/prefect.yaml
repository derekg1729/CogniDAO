# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: cogni-presence
prefect-version: 3.3.3

# build section allows you to manage and build docker images
build:

# push section allows you to manage if and how this project is uploaded to remote locations
push:

# pull section allows you to provide instructions for cloning this project in remote locations
pull:
- prefect.deployments.steps.set_working_directory:
    directory: /workspace/flows/presence

# the deployments section allows you to provide configuration for deploying flows
deployments:
- name: simple-working-mcp
  version:
  tags:
  - cogni
  - autogen
  - mcp
  - stdio
  - simple
  concurrency_limit:
  description: 'Ultra-Simple Working MCP: 3 agents read and summarize active work items using proven stdio transport'
  entrypoint: simple_working_flow.py:simple_working_mcp_flow
  parameters: {}
  work_pool:
    name: cogni-pool
    work_queue_name:
    job_variables: {}
  schedules: []

- name: ai-education-team
  version:
  tags:
  - cogni
  - education
  - ai-training
  - autogen
  - mcp
  - knowledge-graph
  concurrency_limit:
  description: 'AI Education Team Flow: 4 education-focused agents analyze knowledge graph, assess learning needs, and improve educational content with hourly strategic insights'
  entrypoint: ai_education_team_flow.py:ai_education_team_flow
  parameters: {}
  work_pool:
    name: cogni-pool
    work_queue_name:
    job_variables: {}
  schedules:
  - cron: "0 * * * *"
    timezone: "UTC"
    active: true

- name: cleanup-cogni
  version:
  tags:
  - cogni
  - cleanup
  - namespace-migration
  - maintenance
  - system-health
  concurrency_limit:
  description: 'Cleanup Cogni Flow: 2 agents identify test artifacts for deletion and migrate legacy blocks to proper namespaces for system maintenance'
  entrypoint: cleanup_cogni_flow.py:cleanup_team_flow
  parameters: {}
  work_pool:
    name: cogni-pool
    work_queue_name:
    job_variables: {}
  schedules: []  # Manual trigger only for safety
