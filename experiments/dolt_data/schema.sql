-- Auto-generated from MemoryBlock schema. Do not edit manually.
-- This file should ideally be generated by experiments/scripts/generate_dolt_schema.py
-- based on the Pydantic models in experiments/src/memory_system/schemas/.

CREATE TABLE memory_blocks (
  id VARCHAR(255) PRIMARY KEY, -- Using VARCHAR based on Task 1.4 findings
  type TEXT NOT NULL CHECK (type IN ('knowledge', 'task', 'project', 'doc')),
  text TEXT NOT NULL,
  tags_json JSON,          -- Stores MemoryBlock.tags
  metadata_json JSON,      -- Stores MemoryBlock.metadata
  confidence_json JSON,    -- Stores MemoryBlock.confidence
  source_file TEXT,
  source_uri TEXT,
  created_by TEXT,
  created_at DATETIME,
  updated_at DATETIME,
  embedding TEXT,          -- Added to store vector embeddings (if needed)
  schema_version INT NULL  -- Added in Task 2.0, links to node_schemas.schema_version
);

CREATE TABLE block_links (
  from_id VARCHAR(255) NOT NULL, -- Using VARCHAR based on Task 1.4 findings
  to_id VARCHAR(255) NOT NULL,   -- Using VARCHAR based on Task 1.4 findings
  relation VARCHAR(255) NOT NULL, -- Using VARCHAR based on Task 1.4 findings; Should use canonical types from MemoryBlock.links[].relation
  PRIMARY KEY (from_id, to_id, relation),
  FOREIGN KEY (from_id) REFERENCES memory_blocks(id) ON DELETE CASCADE,
  FOREIGN KEY (to_id) REFERENCES memory_blocks(id) ON DELETE CASCADE
);

-- Added in Task 2.0
CREATE TABLE node_schemas (
  node_type VARCHAR(255) NOT NULL, -- Corresponds to MemoryBlock.type (e.g., 'task', 'project')
  schema_version INT NOT NULL,     -- Version number for this schema
  json_schema JSON NOT NULL,       -- The actual JSON schema output from Pydantic model.model_json_schema()
  created_at DATETIME NOT NULL,    -- When this schema version was registered
  PRIMARY KEY (node_type, schema_version)
);

-- Future considerations mentioned in project plan might add:
-- ALTER TABLE memory_blocks ADD COLUMN status VARCHAR(50); 
