{
  "type": "Task",
  "status": "todo",
  "project": "../project-CogniMemorySystem-POC.json",
  "name": "Integrate Adapter into Basic Agent",
  "description": "Set up a basic LangChain agent that uses the CogniStructuredMemoryAdapter for its memory management.",
  "phase": "⚙️ Phase 3: Agent + Tool Wiring (Structured Memory)",
  "implementation_details": {
    "target_file": "experiments/scripts/run_basic_agent.py",
    "test_file": "experiments/tests/test_basic_agent_integration.py",
    "dependencies": [
      "CogniStructuredMemoryAdapter (from Task 3.2)",
      "StructuredMemoryBank (instantiated, from Task 3.1)",
      "LangChain agent setup (basic structure, LLM, prompt)"
    ]
  },
  "action_items": [
    "[ ] Create a script (`run_basic_agent.py`) to set up and run the agent.",
    "[ ] Instantiate `StructuredMemoryBank` with necessary configs (Dolt/LlamaIndex paths).",
    "[ ] Instantiate `CogniStructuredMemoryAdapter`, passing the `StructuredMemoryBank` instance.",
    "[ ] Define a simple LangChain prompt template that includes the memory variable key (e.g., `{relevant_blocks}`).",
    "[ ] Configure a LangChain LLM (e.g., `ChatOpenAI`).",
    "[ ] Create a LangChain agent/chain (e.g., using LCEL or `AgentExecutor`) that incorporates the LLM, prompt, and the `CogniStructuredMemoryAdapter` instance.",
    "[ ] Add logic to the script to invoke the agent with sample input.",
    "[ ] Ensure the agent's execution flow correctly calls `load_memory_variables` and potentially `save_context`."
  ],
  "test_criteria": [
    "[ ] Running the script executes the agent without errors.",
    "[ ] With relevant blocks pre-seeded in memory, invoking the agent with related input shows the memory content being included in the prompt/context sent to the LLM (verify via LangChain debug/verbose output).",
    "[ ] After the agent runs, check if a new memory block representing the interaction was created via `save_context` (verify by querying `StructuredMemoryBank` or checking Dolt).
  ],
  "success_criteria": [
    "[ ] A basic LangChain agent successfully uses `CogniStructuredMemoryAdapter` for context retrieval.",
    "[ ] The agent can potentially save interaction context back into structured memory.",
    "[ ] The integration demonstrates the adapter working within the LangChain ecosystem."
  ],
  "current_status": "Task definition created."
} 