{
  "type": "Task",
  "status": "todo",
  "project": "../project-CogniMemorySystem-POC.json",
  "id": "1.3",
  "title": "Write JSON <-> Dolt conversion functions",
  "phase": "ðŸ§± Core Schema + Local Persistence",
  "goal": "Allow easy export/import between Dolt rows and MemoryBlock objects/JSON.",
  "schema_references": [
    "project.schemas.memory_block_pydantic",
    "project.schemas.dolt_sql"
  ],
  "action_items": [
    "[ ] Write a Python function `dolt_row_to_memory_block(row: Dict) -> MemoryBlock` (using the Pydantic model from `project.schemas.memory_block_pydantic`).",
    "[ ] Handle type conversions (e.g., JSON string columns like `tags_json`, `metadata_json`, `confidence_json` from Dolt to Python dict/list/objects).",
    "[ ] Write a Python function `memory_block_to_dolt_row(block: MemoryBlock) -> Dict` (using Pydantic model).",
    "[ ] Handle type conversions (e.g., Python dict/list/objects for tags, metadata, confidence to JSON strings for Dolt columns `tags_json`, `metadata_json`, `confidence_json`).",
    "[ ] Consider using `doltpy` library for interacting with Dolt if needed, or prepare data for SQL statements."
  ],
  "test_criteria": [
    "Export a Dolt table (or single row) to JSON (`dolt sql -r json -q 'SELECT * ...'`).",
    "Load the exported JSON into Python and convert it to `MemoryBlock` instances using the function.",
    "Convert a `MemoryBlock` instance back to a dictionary suitable for Dolt insertion, ensuring correct JSON string formatting for relevant columns.",
    "Verify data integrity after round-trip conversion."
  ],
  "current_status": "Not started."
} 